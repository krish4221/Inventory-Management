generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  password  String
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt  

  Client    Client[]
  Inventory Inventory[]
  Language  Language[]
  countries Country[]    
  Currency  Currency[]
  Company   Company[]
}

model Client {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  street      String
  city        String
  pobox       String
  status      Boolean @default(true)
  pincode     Int
  userId      String? @db.ObjectId
  user        User?   @relation(fields: [userId], references: [id])

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt  
}

model Inventory {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  cost        Int
  userId      String? @db.ObjectId
  user        User?   @relation(fields: [userId], references: [id])

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt  
}

model Language {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  code        String
  userId      String? @db.ObjectId
  user        User?   @relation(fields: [userId], references: [id])

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt 
}

model Country {
  id        String   @id @map("_id") 
  name       String
  code       String
  userId     String?  @db.ObjectId  
  user       User?    @relation(fields: [userId], references: [id])

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt 
}

model Currency {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  code        String
  userId      String? @db.ObjectId
  user        User?   @relation(fields: [userId], references: [id])

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt  
}

model Company {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  street      String
  city        String
  pobox       String
  telephone   String
  mobileno    Int
  fax         String
  email       String   @unique
  dataline    String
  telebox     String
  comments    String
  status      Boolean @default(true)
  pincode     Int
  userId      String? @db.ObjectId
  user        User?   @relation(fields: [userId], references: [id])

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt  
}
